{"version":3,"sources":["Todos.js","AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","todoList","length","map","todo","className","onClick","content","id","AddTodo","state","handleChange","e","setState","target","value","handleSumbit","preventDefault","props","addTodo","onSubmit","this","type","onChange","Component","App","filter","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAuBeA,EArBA,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAEdC,EAAWF,EAAMG,OACnBH,EAAMI,KAAI,SAAAC,GACN,OACI,qBAAKC,UAAU,kBAAf,SACI,sBAAMC,QAAS,WAAQN,EAAW,OAAlC,SAA4CI,EAAKG,WADfH,EAAKI,OAQnD,mBAAGH,UAAU,SAAb,2CAEJ,OACI,qBAAKA,UAAU,mBAAf,SACCJ,KCaMQ,E,4MA5BXC,MAAQ,CACJH,QAAS,I,EAEjBI,aAAe,SAACC,GACZ,EAAKC,SAAS,CAClBN,QAASK,EAAEE,OAAOC,S,EAIlBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,QAAQ,EAAKT,OACxB,EAAKG,SAAU,CACZN,QAAS,M,4CAIZ,WACI,OACI,8BACI,uBAAMa,SAAUC,KAAKL,aAArB,UACI,oDACA,uBAAOM,KAAK,OAAOC,SAAUF,KAAKV,aAAcI,MAAOM,KAAKX,MAAMH,mB,GAvBhEiB,aCoCPC,E,4MAjCbf,MAAQ,CACNX,MAAM,CACJ,CAACS,GAAG,EAAGD,QAAS,iBAChB,CAACC,GAAG,EAAGD,QAAS,sB,EAGpBP,WAAa,SAACQ,GAChB,IAAMT,EAAQ,EAAKW,MAAMX,MAAM2B,QAAO,SAAAtB,GACtC,OAAOA,EAAKI,KAAOA,KAEnB,EAAKK,SAAS,CACZd,W,EAIFoB,QAAU,SAACf,GACTA,EAAKI,GAAKmB,KAAKC,SACf,IAAI7B,EAAK,sBAAM,EAAKW,MAAMX,OAAjB,CAAwBK,IACjC,EAAKS,SAAS,CACZd,W,4CAIF,WACE,OACE,sBAAKM,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,0BACA,cAAC,EAAD,CAAON,MAAOsB,KAAKX,MAAMX,MAAOC,WAAYqB,KAAKrB,aACjD,cAAC,EAAD,CAASmB,QAASE,KAAKF,iB,GA7BZK,aCOJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3715ab8a.chunk.js","sourcesContent":["import React from 'react';\n\n const Todos = ({todos, deleteTodo}) => {\n    \n    const todoList = todos.length ? (\n        todos.map(todo => {\n            return (\n                <div className=\"collection-item\" key={todo.id}>\n                    <span onClick={() => { deleteTodo('id')} }>{todo.content}</span>\n                </div>\n            )\n\n        })\n    ) : (\n        \n        <p className=\"center\">You have no todo's left, yay!</p>\n    )\n    return (\n        <div className=\"todos collection\">\n        {todoList}            \n        </div>\n    );\n}\nexport default Todos;","import React, { Component } from 'react'\n\n\nclass AddTodo extends Component {\n    state = {\n        content: ''\n    }\nhandleChange = (e) => {\n    this.setState({\ncontent: e.target.value\n    });\n}\n\nhandleSumbit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state);\n    this.setState ({\n       content: ''  \n    })\n   \n}\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSumbit}>\n                    <label>Add a new todo:</label>\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.content}/>\n                </form>\n            </div>\n        )\n    }\n}\nexport default AddTodo;\n\n","import React, { Component } from 'react';\nimport Todos from './Todos'\nimport AddTodo from './AddTodo'\n\n\n class App extends Component {\n  state = {\n    todos:[\n      {id:1, content: 'take a shower'},\n      {id:2, content: 'brush your teeth'}\n    ]\n  }\n  deleteTodo = (id) =>{\nconst todos = this.state.todos.filter(todo => {\nreturn todo.id !== id\n});\nthis.setState({\n  todos\n});\n\n}\naddTodo = (todo) => {\n  todo.id = Math.random();\n  let todos =[...this.state.todos, todo];\n  this.setState({\n    todos\n  });\n\n}\n  render() {\n    return (\n      <div className=\"todo-app container\">\n        <h1 className=\"center pink-text\">My Todo List</h1>\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo}/>\n        <AddTodo addTodo={this.addTodo} />\n      </div>\n    )\n  };\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}